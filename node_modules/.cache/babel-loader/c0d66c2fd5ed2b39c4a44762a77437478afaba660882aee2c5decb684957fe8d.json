{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumo\\\\OneDrive\\\\Documents\\\\React\\\\P1\\\\myapp\\\\src\\\\components\\\\Todos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PredictionCard from './PredictionCard';\nimport MeanPredictionCard from './MeanPredictionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst models = [{\n  title: \"1 Month Prediction\",\n  modelKey: \"1_month\",\n  color: \"#f7931a\"\n}, {\n  title: \"3 Months Prediction\",\n  modelKey: \"3_month\",\n  color: \"#e67e22\"\n}, {\n  title: \"6 Months Prediction\",\n  modelKey: \"6_month\",\n  color: \"#e17055\"\n}, {\n  title: \"1 Year Prediction\",\n  modelKey: \"1_year\",\n  color: \"#00b894\"\n}, {\n  title: \"2 Years Prediction\",\n  modelKey: \"2_year\",\n  color: \"#0984e3\"\n}, {\n  title: \"5 Years Prediction\",\n  modelKey: \"5_year\",\n  color: \"#6c5ce7\"\n}];\nconst Todos = () => {\n  _s();\n  const [predictions, setPredictions] = useState(Array(models.length).fill(null));\n\n  // Callback to update prediction for each card\n  const handlePrediction = (index, value) => {\n    setPredictions(prev => {\n      const updated = [...prev];\n      updated[index] = value;\n      return updated;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"predict-bg py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: models.map((m, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-lg-4 d-flex\",\n          children: /*#__PURE__*/_jsxDEV(PredictionCard, {\n            title: m.title,\n            modelKey: m.modelKey,\n            color: m.color,\n            onPrediction: value => handlePrediction(idx, value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, m.modelKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-lg-4 d-flex\",\n          children: /*#__PURE__*/_jsxDEV(MeanPredictionCard, {\n            predictions: predictions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Todos, \"4CrbAT3Xkv7OIM9sVB3R0LhIfFs=\");\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useState","PredictionCard","MeanPredictionCard","jsxDEV","_jsxDEV","models","title","modelKey","color","Todos","_s","predictions","setPredictions","Array","length","fill","handlePrediction","index","value","prev","updated","className","children","map","m","idx","onPrediction","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/soumo/OneDrive/Documents/React/P1/myapp/src/components/Todos.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PredictionCard from './PredictionCard';\r\nimport MeanPredictionCard from './MeanPredictionCard';\r\n\r\nconst models = [\r\n  { title: \"1 Month Prediction\", modelKey: \"1_month\", color: \"#f7931a\" },\r\n  { title: \"3 Months Prediction\", modelKey: \"3_month\", color: \"#e67e22\" },\r\n  { title: \"6 Months Prediction\", modelKey: \"6_month\", color: \"#e17055\" },\r\n  { title: \"1 Year Prediction\", modelKey: \"1_year\", color: \"#00b894\" },\r\n  { title: \"2 Years Prediction\", modelKey: \"2_year\", color: \"#0984e3\" },\r\n  { title: \"5 Years Prediction\", modelKey: \"5_year\", color: \"#6c5ce7\" }\r\n];\r\n\r\nconst Todos = () => {\r\n  const [predictions, setPredictions] = useState(Array(models.length).fill(null));\r\n\r\n  // Callback to update prediction for each card\r\n  const handlePrediction = (index, value) => {\r\n    setPredictions(prev => {\r\n      const updated = [...prev];\r\n      updated[index] = value;\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"predict-bg py-5\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          {models.map((m, idx) => (\r\n            <div className=\"col-md-6 col-lg-4 d-flex\" key={m.modelKey}>\r\n              <PredictionCard\r\n                title={m.title}\r\n                modelKey={m.modelKey}\r\n                color={m.color}\r\n                onPrediction={value => handlePrediction(idx, value)}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-6 col-lg-4 d-flex\">\r\n            <MeanPredictionCard predictions={predictions} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,MAAM,GAAG,CACb;EAAEC,KAAK,EAAE,oBAAoB;EAAEC,QAAQ,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACtE;EAAEF,KAAK,EAAE,qBAAqB;EAAEC,QAAQ,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACvE;EAAEF,KAAK,EAAE,qBAAqB;EAAEC,QAAQ,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAU,CAAC,EACvE;EAAEF,KAAK,EAAE,mBAAmB;EAAEC,QAAQ,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAU,CAAC,EACpE;EAAEF,KAAK,EAAE,oBAAoB;EAAEC,QAAQ,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAU,CAAC,EACrE;EAAEF,KAAK,EAAE,oBAAoB;EAAEC,QAAQ,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAU,CAAC,CACtE;AAED,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACa,KAAK,CAACR,MAAM,CAACS,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;;EAE/E;EACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACzCN,cAAc,CAACO,IAAI,IAAI;MACrB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,CAAC;MACzBC,OAAO,CAACH,KAAK,CAAC,GAAGC,KAAK;MACtB,OAAOE,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BlB,OAAA;MAAKiB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBlB,OAAA;QAAKiB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EACxCjB,MAAM,CAACkB,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,kBACjBrB,OAAA;UAAKiB,SAAS,EAAC,0BAA0B;UAAAC,QAAA,eACvClB,OAAA,CAACH,cAAc;YACbK,KAAK,EAAEkB,CAAC,CAAClB,KAAM;YACfC,QAAQ,EAAEiB,CAAC,CAACjB,QAAS;YACrBC,KAAK,EAAEgB,CAAC,CAAChB,KAAM;YACfkB,YAAY,EAAER,KAAK,IAAIF,gBAAgB,CAACS,GAAG,EAAEP,KAAK;UAAE;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD;QAAC,GAN2CN,CAAC,CAACjB,QAAQ;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOpD,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1B,OAAA;QAAKiB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,eACzClB,OAAA;UAAKiB,SAAS,EAAC,0BAA0B;UAAAC,QAAA,eACvClB,OAAA,CAACF,kBAAkB;YAACS,WAAW,EAAEA;UAAY;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}